version: '3'
services:
  nginx:
    image: nginx:latest
    container_name: nginx-proxy
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - conf:/etc/nginx/conf.d
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - certs:/etc/nginx/certs
    labels:
      - 'com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy=true'

  dockergen:
    image: jwilder/docker-gen:0.7.3
    container_name: nginx-proxy-gen
    depends_on:
      - nginx
    command: -notify-sighup nginx-proxy -watch -wait 5s:30s /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf
    volumes:
      - conf:/etc/nginx/conf.d
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - certs:/etc/nginx/certs
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./nginx.tmpl:/etc/docker-gen/templates/nginx.tmpl:ro

  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: nginx-proxy-le
    depends_on:
      - nginx
      - dockergen
    environment:
      NGINX_PROXY_CONTAINER: nginx-proxy
      NGINX_DOCKER_GEN_CONTAINER: nginx-proxy-gen
    volumes:
      - conf:/etc/nginx/conf.d
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - certs:/etc/nginx/certs
      - /var/run/docker.sock:/var/run/docker.sock:ro

  db:
    image: postgres:latest
    container_name: linkwind_db
    build:
      context: .
      dockerfile: db.prod.dockerfile
    depends_on:
      - nginx
      - dockergen
      - letsencrypt
    ports:
      - ${DB_PORT}:${DB_PORT}
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - PGDATA=/pgdata
    volumes:
      - ./app/data/pgdata:/var/lib/postgresql/data

  app:
    container_name: linkwind_app
    env_file:
      - .env
    build:
      context: .
      args:
        app_env: ${APP_ENV}
      dockerfile: app.prod.dockerfile
    environment:
      - VIRTUAL_HOST=app.linkwind.co
      - VIRTUAL_PORT=${APP_PORT}
      - LETSENCRYPT_HOST=app.linkwind.co
    #ports:
    #  - ${APP_PORT}:${APP_PORT}
    restart: on-failure
    volumes:
      - app:/go/src/linkwind/app
    depends_on:
      - nginx
      - dockergen
      - letsencrypt
      - db

  pgadmin:
    container_name: linkwind_pg
    image: dpage/pgadmin4
    env_file:
      - .env
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PG_ADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PG_ADMIN_PASSWORD}
    depends_on:
      - nginx
      - dockergen
      - letsencrypt
      - db
    ports:
      - ${PG_ADMIN_PORT}:${PG_ADMIN_PORT}
    restart: unless-stopped

  # web:
  #   container_name: linkwind_web
  #   env_file:
  #     - .env
  #   build:
  #     context: .
  #     args:
  #       app_env: ${APP_ENV}
  #     dockerfile: web.prod.dockerfile
  #   environment:
  #     - VIRTUAL_HOST=linkwind.co
  #     - LETSENCRYPT_HOST=linkwind.co
  #   #ports:
  #   #  - ${WEB_SITE_PORT}:${WEB_SITE_PORT}
  #   restart: on-failure
  #   depends_on:
  #     - db

volumes:
  app:
  pgdata:
  conf:
  vhost:
  html:
  certs:

# Do not forget to 'docker network create nginx-proxy' before launch, and to add '--network nginx-proxy' to proxied containers.

networks:
  default:
    external:
      name: nginx-proxy
